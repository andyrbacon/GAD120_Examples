using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Media;

namespace AudioExample
{
    class Program
    {
        static SoundPlayer soundPlayer = new SoundPlayer();

        static List<string> sounds = new List<string>
        {   Environment.CurrentDirectory + "/kick.wav",
            Environment.CurrentDirectory + "/snare.wav",
            Environment.CurrentDirectory + "/triangle.wav",
            Environment.CurrentDirectory + "/shaker.wav"
        };

        static ConsoleColor[] buttonColorsIdle = new ConsoleColor[] 
        {   ConsoleColor.Red,
            ConsoleColor.Yellow,
            ConsoleColor.Cyan,
            ConsoleColor.Green
        };
        static ConsoleColor[] buttonColorsHighlight = new ConsoleColor[] 
        {   ConsoleColor.DarkRed,
            ConsoleColor.DarkYellow,
            ConsoleColor.DarkCyan,
            ConsoleColor.DarkGreen
        };

        static ConsoleKey[] consoleKeys = new ConsoleKey[] 
        {   ConsoleKey.D1,
            ConsoleKey.D2,
            ConsoleKey.D3,
            ConsoleKey.D4
        };

        static int startingLevel = 1;
        static List<int> simonLevel = new List<int>();
        static Random random = new Random();
        enum State { intro, simon, player };
        static State state = State.intro;
        static int playerLevelIndex = 0;
        static string message = "";
        static int playerSoundDelay = 100;
        static int simonSoundDelay = 250;
        static ConsoleKeyInfo consoleKey;
        static void Main(string[] args)
        {
            // setup 
            AddSoundsToSimon(startingLevel);

            DrawButtons(-1);

            while (true)
            { 
                consoleKey = Console.ReadKey();
                if (state == State.intro)
                {
                    for (int i = 0; i < consoleKeys.Length; i++)
                    {
                        if (consoleKey.Key == consoleKeys[i])
                            PlaySound(i, playerSoundDelay);
                    }

                    if (consoleKey.Key == ConsoleKey.Spacebar)
                    {
                        PlaySimon();
                    }
                }
                else if (state == State.player)
                {
                    for (int i = 0; i < consoleKeys.Length; i++)
                    {
                        if (consoleKey.Key == consoleKeys[i])
                            PlayPlayer(i);
                    }
                }
            }
        }

        static void AddSoundsToSimon(int num)
        {
            for (int i = 0; i < num; i++)
                simonLevel.Add(random.Next(0, sounds.Count));
        }

        static void PlayPlayer(int index)
        {
            PlaySound(index, playerSoundDelay);
            if (index == simonLevel[playerLevelIndex])
            {
                //Console.WriteLine("YES");
                if (playerLevelIndex == simonLevel.Count - 1)
                {
                    System.Threading.Thread.Sleep(simonSoundDelay);
                    PlaySimon();
                    return;
                }
                playerLevelIndex++;
            }
            else
            {
                //Console.WriteLine("NO");
                soundPlayer.SoundLocation = Environment.CurrentDirectory + "/failure.wav";
                soundPlayer.Play();
                Console.Clear();
                Console.WriteLine("GAME OVER!");
                System.Threading.Thread.Sleep(1000);
                Restart();
            }
        }

        static void Restart()
        {
            playerLevelIndex = 0;
            simonLevel.Clear();
            AddSoundsToSimon(startingLevel);
            state = State.intro;
            DrawButtons(-1);
        }

        static void PlaySound(int index, int delay = 250)
        {
            soundPlayer.SoundLocation = sounds[index];
            DrawButtons(index);
            soundPlayer.Play();
            System.Threading.Thread.Sleep(delay);
            DrawButtons(-1);
            System.Threading.Thread.Sleep(delay);
        }

        static void PlaySimon()
        {
            state = State.simon;
            AddSoundsToSimon(1);

            for (int i = 0; i < simonLevel.Count; i++)
            {
                int index = simonLevel[i];
                PlaySound(index, simonSoundDelay);
            }

            playerLevelIndex = 0;
            state = State.player;
            DrawButtons(-1);
        }

        static void DrawInstructions()
        {
            Console.ForegroundColor = ConsoleColor.White;

            Console.WriteLine("LEVEL: " + simonLevel.Count);

            if (state == State.intro)
                message = "PRESS SPACE TO START";
            else if (state == State.player)
                message = "YOUR TURN ";// + playerLevelIndex;
            else if (state == State.simon)
                message = "SIMON'S TURN";
            Console.WriteLine(message);
        }
        
        static void DrawButtons(int highlightIndex)
        {
            Console.Clear();

            DrawInstructions();
            Console.WriteLine();
            string space = "    ";

            int rows = 5;
            for (int r = 0; r < rows; r++)
            {
                Console.Write(space);
                for (int i = 0; i < buttonColorsIdle.Length; i++)
                {
                    if (highlightIndex == i)
                        Console.BackgroundColor = buttonColorsHighlight[i];
                    else
                        Console.BackgroundColor = buttonColorsIdle[i];

                    if (r == rows/2)
                        Console.ForegroundColor = ConsoleColor.Black;
                    else
                        Console.ForegroundColor = Console.BackgroundColor;

                    Console.Write(space + (consoleKeys[i]) + space);
                    Console.ResetColor();
                    Console.Write(space);
                }
                Console.WriteLine();               
            }
            Console.ResetColor();
        }
    }
}
